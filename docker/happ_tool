#!/usr/bin/env bash
set -euo pipefail

SCRIPT_NAME=$(basename "$0")

if [ "$SCRIPT_NAME" = "list_happs" ]; then
  ADMIN_PORT="${2:-4444}"
  hc s call -r "$ADMIN_PORT" list-apps
  exit 0
fi

if [ "$SCRIPT_NAME" = "uninstall_happ" ]; then
  APP_ID="$1"
  ADMIN_PORT="${2:-4444}"
  if [ -z "$APP_ID" ]; then
    echo "Usage: uninstall_happ <APP_ID> [<ADMIN_PORT>]"
    exit 1
  fi
  echo "[*] Uninstalling app $APP_ID..."
  hc s call -r "$ADMIN_PORT" uninstall-app "$APP_ID"
  echo "[✔] App $APP_ID uninstalled!"
  exit 0
fi

if [ "$SCRIPT_NAME" = "enable_happ" ]; then
  APP_ID="$1"
  ADMIN_PORT="${2:-4444}"
  if [ -z "$APP_ID" ]; then
    echo "Usage: enable_happ <APP_ID> [<ADMIN_PORT>]"
    exit 1
  fi                        
  echo "[*] Enabling app $APP_ID..."
  hc s call -r "$ADMIN_PORT" enable-app "$APP_ID"
  echo "[✔] App $APP_ID enabled!"
  exit 0
fi

if [ "$SCRIPT_NAME" = "disable_happ" ]; then
  APP_ID="$1"
  ADMIN_PORT="${2:-4444}"
  if [ -z "$APP_ID" ]; then
    echo "Usage: disable_happ <APP_ID> [<ADMIN_PORT>]"
    exit 1
  fi
  echo "[*] Disabling app $APP_ID..."
  hc s call -r "$ADMIN_PORT" disable-app "$APP_ID"
  echo "[✔] App $APP_ID disabled!"
  exit 0
fi


CONFIG_FILE="$1"
# Usage: install_happ config.json <NODE_NAME> <ADMIN_PORT>
if [ -z "$CONFIG_FILE" ]; then
  echo "Usage: install_happ <CONFIG_FILE> [<NODE_NAME>] [<ADMIN_PORT>]"
  exit 1
fi

NODE_NAME="${2:-$(hostname)}"
ADMIN_PORT="${3:-4444}"   # default to 4444 if not provided
                            
# ---- Parse JSON ----
APP_NAME=$(jq -r '.app.name' "$CONFIG_FILE")
APP_VERSION=$(jq -r '.app.version // "0.0.1"' "$CONFIG_FILE")
HAPP_URL=$(jq -r '.app.happUrl' "$CONFIG_FILE")
NETWORK_SEED=$(jq -r '.app.modifiers.networkSeed // empty' "$CONFIG_FILE")

# ---- Download happ file ----
HAPP_FILE="/var/local/lib/holochain/tmp/${APP_NAME}-${APP_VERSION}.happ"
echo "[*] Downloading happ from $HAPP_URL ..."
curl -sSL "$HAPP_URL" -o "$HAPP_FILE"
if [ ! -f "$HAPP_FILE" ]; then
  echo "[!] Download failed at $HAPP_FILE"
  exit 1
fi

# ---- Generate agent key ----
AGENT_KEY=$(hc s call -r "$ADMIN_PORT" new-agent | awk '{print $NF}')
## AGENT_KEY=$(hc s -f "$ADMIN_PORT" call new-agent | awk '{print $NF}')

# ---- Build App ID ----
APP_ID="${APP_NAME}::${APP_VERSION}::${AGENT_KEY}"
echo "[*] App ID = $APP_ID"

# ---- Install app ----
echo "[*] Installing app..."
## hc s -f "$ADMIN_PORT" call install-app \
hc s call -r "$ADMIN_PORT" install-app \
  --agent-key "$AGENT_KEY" \
  --app-id "$APP_ID" \
  "$HAPP_FILE" \            
  "$NETWORK_SEED"

# ---- Enable app ----
echo "[*] Enabling app..."
hc s -f "$ADMIN_PORT" call enable-app "$APP_ID"

# ---- Initial zome calls (if configured) ----
# Looks for .app.initZomeCalls array in the provided config JSON and echoes planned calls
INIT_CALLS_JSON=$(jq -c '.app.initZomeCalls // .app.init_zome_calls // []' "$CONFIG_FILE")
if [ "$INIT_CALLS_JSON" != "[]" ]; then
  echo "[*] Found initZomeCalls in config; authorizing zome calls..."
  echo "" | hc s zome-call-auth --piped -r "$ADMIN_PORT" "$APP_ID"
  
  # List apps and extract DnaHash for our specific app
  echo "[*] Getting app info to extract DnaHash for $APP_ID..."
  APPS_LIST=$(hc s call -r "$ADMIN_PORT" list-apps)
  DNA_HASH=$(echo "$APPS_LIST" | sed -n "s/.*installed_app_id: \"$APP_ID\"[^}]*DnaHash(\([^)]*\)).*/\1/p")
  
  if [ -n "$DNA_HASH" ]; then
    echo "[*] Extracted DnaHash: $DNA_HASH"
    echo "[*] Iterating init zome calls..."
    jq -c '.app.initZomeCalls[] // .app.init_zome_calls[]' "$CONFIG_FILE" | while read -r call; do
      ZOME=$(printf '%s' "$call" | jq -r '.zome')
      FN_NAME=$(printf '%s' "$call" | jq -r '.fn_name')
      PAYLOAD=$(printf '%s' "$call" | jq -c '.payload')
      
      # Check if payload contains <NODE_NAME> placeholder
      if echo "$PAYLOAD" | grep -q "<NODE_NAME>"; then
        # If NODE_NAME was not provided as parameter, throw error
        if [ "$NODE_NAME" = "$(hostname)" ] && [ -z "${2:-}" ]; then
          echo "[!] Error: PAYLOAD contains <NODE_NAME> placeholder but NODE_NAME parameter was not provided"
          echo "[!] Usage: install_happ <CONFIG_FILE> <NODE_NAME> [<ADMIN_PORT>]"
          exit 1
        fi
        # Replace <NODE_NAME> with actual NODE_NAME
        PAYLOAD=$(echo "$PAYLOAD" | sed "s/<NODE_NAME>/$NODE_NAME/g")
      fi
      
      echo "calling $FN_NAME with $PAYLOAD"
      echo "" | hc s -f "$ADMIN_PORT" zome-call --piped "$APP_ID" "$DNA_HASH" "$ZOME" "$FN_NAME" "$PAYLOAD"
    done
  else
    echo "[!] Could not extract DnaHash from apps list"
  fi
fi

echo "[✔] App $APP_NAME ($APP_ID) installed and enabled!"