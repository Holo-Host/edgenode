name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-holos-iso:
    needs: create-release
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[holos]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            holos/rust/holos-config/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Buildroot downloads
        uses: actions/cache@v4
        with:
          path: holos/dl
          key: ${{ runner.os }}-buildroot-dl-${{ hashFiles('holos/Makefile', 'holos/holos-buildroot-2025.08.config') }}

      - name: Cache Buildroot output
        uses: actions/cache@v4
        with:
          path: holos/output
          key: ${{ runner.os }}-buildroot-out-${{ hashFiles('holos/Makefile', 'holos/holos-buildroot-2025.08.config', 'holos/kernel-config-x86_64.config') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip libncurses5-dev libssl-dev bc bison flex libelf-dev make musl-tools xorriso

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Build HolOS ISO
        run: |
          cd holos
          make iso

      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: holos/tmp/holos-*.iso
          asset_name: holos-${{ github.ref_name }}.iso
          asset_content_type: application/octet-stream

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    strategy:
      matrix:
        dockerfile:
          - "docker/Dockerfile.hc-0.5.6"
          - "docker/Dockerfile.hc-0.6.0-dev-go-pion"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and test Docker image
        run: |
          DOCKERFILE_BASENAME=$(basename ${{ matrix.dockerfile }})
          IMAGE_SUFFIX=$(echo "$DOCKERFILE_BASENAME" | sed 's/^Dockerfile\.//')
          IMAGE_TAG="${{ github.ref_name }}-${IMAGE_SUFFIX}"
          docker build docker/ --file ${{ matrix.dockerfile }} --tag "ghcr.io/holo-host/edgenode:${IMAGE_TAG}"
          IMAGE_NAME="ghcr.io/holo-host/edgenode:${IMAGE_TAG}" ./docker/tests/libs/bats/bin/bats docker/tests
          docker push "ghcr.io/holo-host/edgenode:${IMAGE_TAG}"
          if [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref_name }}" == "v"* ]]; then
            if [[ "$IMAGE_SUFFIX" == *go-pion* ]]; then
              LATEST_SUFFIX="-go-pion"
            else
              LATEST_SUFFIX=""
            fi
            docker tag "ghcr.io/holo-host/edgenode:${IMAGE_TAG}" "ghcr.io/holo-host/edgenode:latest${LATEST_SUFFIX}"
            docker push "ghcr.io/holo-host/edgenode:latest${LATEST_SUFFIX}"
          fi